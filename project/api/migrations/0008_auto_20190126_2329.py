# Generated by Django 2.1.5 on 2019-01-26 23:29

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('api', '0007_city'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalCachedData',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('wikidata_id', models.PositiveIntegerField()),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('date', models.DateField()),
                ('rank', models.PositiveIntegerField()),
                ('event_type', models.PositiveIntegerField(choices=[(178561, 'battle'), (131569, 'document'), (569, 'birth'), (570, 'death')])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical cached data',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCity',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('wikidata_id', models.PositiveIntegerField()),
                ('label', models.TextField(max_length=90)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('inception_date', models.DateField()),
                ('dissolution_date', models.DateField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical city',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMapSettings',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('bbox', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
                ('zoom_min', models.FloatField()),
                ('zoom_max', models.FloatField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical map settings',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNarration',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('date_label', models.CharField(max_length=100)),
                ('map_datetime', models.DateTimeField()),
                ('img', models.URLField(blank=True, null=True)),
                ('video', models.URLField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('narrative', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Narrative')),
                ('settings', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.MapSettings')),
            ],
            options={
                'verbose_name': 'historical narration',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNarrative',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('author', models.CharField(max_length=100)),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical narrative',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.RemoveField(
            model_name='atomicpolygon',
            name='name',
        ),
        migrations.RemoveField(
            model_name='atomicpolygon',
            name='wikidata_id',
        ),
        migrations.RemoveField(
            model_name='historicalatomicpolygon',
            name='name',
        ),
        migrations.RemoveField(
            model_name='historicalatomicpolygon',
            name='wikidata_id',
        ),
        migrations.RemoveField(
            model_name='territorialentity',
            name='predecessors',
        ),
        migrations.AddField(
            model_name='spacetimevolume',
            name='related_events',
            field=models.ManyToManyField(to='api.CachedData'),
        ),
        migrations.AlterField(
            model_name='historicalpoliticalrelation',
            name='control_type',
            field=models.PositiveIntegerField(choices=[(10, 'direct'), (20, 'indirect'), (30, 'group')]),
        ),
        migrations.AlterField(
            model_name='politicalrelation',
            name='control_type',
            field=models.PositiveIntegerField(choices=[(10, 'direct'), (20, 'indirect'), (30, 'group')]),
        ),
    ]
